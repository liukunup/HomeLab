---  # Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: jupyter
---  # ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: notebook
  namespace: jupyter
  labels:
    app: notebook
data:
  grafana.ini: |
    [server]
      domain = grafana.perf.com
---  # PersistentVolumeClaim (注意: 前提是`StorageClass`已经存在)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: notebook
  namespace: jupyter
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: k8s-sigs.io/nfs-subdir-external-provisioner
spec:
  storageClassName: nas-qnap-kubernetes
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---  # Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notebook
  namespace: jupyter
  labels:
    app: notebook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notebook
  template:
    metadata:
      labels:
        app: notebook
    spec:
      containers:
        - name: notebook
          image: jupyter/minimal-notebook:notebook-6.4.12
          command: ["start-notebook.sh"]
          args: ["--NotebookApp.password='sha1:a7c0702d28e9:8a8868c5d4ea33af70e04c634487402b3997f40c'"]
          ports:
            - containerPort: 8888
              name: webui
              protocol: TCP
          env:
            - name: JUPYTER_ENABLE_LAB
              value: 'yes'
            - name: GRANT_SUDO
              value: 'yes'
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
            limits:
              cpu: 1000m
              memory: 2Gi
          volumeMounts:
            - mountPath: /home/jovyan/work
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: notebook
--- # Service
apiVersion: v1
kind: Service
metadata:
  name: notebook
  namespace: jupyter
  labels:
    app: notebook
spec:
  ports:
    - port: 8888
      targetPort: webui
      protocol: TCP
  selector:
    app: notebook
  sessionAffinity: None
  type: LoadBalancer
---  # Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notebook
  namespace: jupyter
  labels:
    app: notebook
spec:
  rules:
  - host: notebook.homelab.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: notebook
            port:
              number: 8888
